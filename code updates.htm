<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 15">
<meta name=Originator content="Microsoft Word 15">
<link rel=File-List href="code%20updates_files/filelist.xml">
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Cory Higgins</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Cory Higgins</o:LastAuthor>
  <o:Revision>1</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:Created>2025-07-12T05:02:00Z</o:Created>
  <o:LastSaved>2025-07-12T05:03:00Z</o:LastSaved>
  <o:Pages>31</o:Pages>
  <o:Words>6189</o:Words>
  <o:Characters>35282</o:Characters>
  <o:Lines>294</o:Lines>
  <o:Paragraphs>82</o:Paragraphs>
  <o:CharactersWithSpaces>41389</o:CharactersWithSpaces>
  <o:Version>16.00</o:Version>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=themeData href="code%20updates_files/themedata.thmx">
<link rel=colorSchemeMapping href="code%20updates_files/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:SplitPgBreakAndParaMark/>
   <w:EnableOpenTypeKerning/>
   <w:DontFlipMirrorIndents/>
   <w:OverrideTableStyleHps/>
  </w:Compatibility>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="&#45;-"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="false"
  DefSemiHidden="false" DefQFormat="false" DefPriority="99"
  LatentStyleCount="376">
  <w:LsdException Locked="false" Priority="0" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 9"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 1"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 2"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 3"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 4"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 5"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 6"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 7"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 8"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="header"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footer"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index heading"/>
  <w:LsdException Locked="false" Priority="35" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="table of figures"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="envelope address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="envelope return"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="line number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="page number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="endnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="endnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="table of authorities"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="macro"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="toa heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 5"/>
  <w:LsdException Locked="false" Priority="10" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Closing"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Signature"/>
  <w:LsdException Locked="false" Priority="1" SemiHidden="true"
   UnhideWhenUsed="true" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Message Header"/>
  <w:LsdException Locked="false" Priority="11" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Salutation"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Date"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text First Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text First Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Note Heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Block Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Hyperlink"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="FollowedHyperlink"/>
  <w:LsdException Locked="false" Priority="22" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" Priority="20" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Document Map"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Plain Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="E-mail Signature"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Top of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Bottom of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal (Web)"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Acronym"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Cite"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Code"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Definition"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Keyboard"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Preformatted"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Sample"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Typewriter"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Variable"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal Table"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation subject"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="No List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Contemporary"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Elegant"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Professional"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Subtle 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Subtle 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Balloon Text"/>
  <w:LsdException Locked="false" Priority="39" Name="Table Grid"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Theme"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" QFormat="true"
   Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" QFormat="true"
   Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" QFormat="true"
   Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" QFormat="true"
   Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" QFormat="true"
   Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" QFormat="true"
   Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" SemiHidden="true"
   UnhideWhenUsed="true" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="TOC Heading"/>
  <w:LsdException Locked="false" Priority="41" Name="Plain Table 1"/>
  <w:LsdException Locked="false" Priority="42" Name="Plain Table 2"/>
  <w:LsdException Locked="false" Priority="43" Name="Plain Table 3"/>
  <w:LsdException Locked="false" Priority="44" Name="Plain Table 4"/>
  <w:LsdException Locked="false" Priority="45" Name="Plain Table 5"/>
  <w:LsdException Locked="false" Priority="40" Name="Grid Table Light"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Mention"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Smart Hyperlink"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Hashtag"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Unresolved Mention"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Smart Link"/>
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Helvetica;
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"Tms Rmn";
	panose-1:2 2 6 3 4 5 5 2 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Helv;
	panose-1:2 11 6 4 2 2 2 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"New York";
	panose-1:2 4 5 3 6 5 6 2 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:System;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	mso-font-alt:"\FF2D\FF33 \660E\671D";
	mso-font-charset:128;
	mso-generic-font-family:roman;
	mso-font-pitch:fixed;
	mso-font-signature:1 134676480 16 0 131072 0;}
@font-face
	{font-family:Batang;
	panose-1:2 3 6 0 0 1 1 1 1 1;
	mso-font-alt:\BC14\D0D5;
	mso-font-charset:129;
	mso-generic-font-family:auto;
	mso-font-pitch:fixed;
	mso-font-signature:1 151388160 16 0 524288 0;}
@font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:\5B8B\4F53;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:PMingLiU;
	panose-1:2 1 6 1 0 1 1 1 1 1;
	mso-font-alt:\65B0\7D30\660E\9AD4;
	mso-font-charset:136;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 134742016 16 0 1048576 0;}
@font-face
	{font-family:"MS Gothic";
	panose-1:2 11 6 9 7 2 5 8 2 4;
	mso-font-alt:"\FF2D\FF33 \30B4\30B7\30C3\30AF";
	mso-font-charset:128;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:1 134676480 16 0 131072 0;}
@font-face
	{font-family:Dotum;
	panose-1:2 11 6 0 0 1 1 1 1 1;
	mso-font-alt:\B3CB\C6C0;
	mso-font-charset:129;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:1 151388160 16 0 524288 0;}
@font-face
	{font-family:SimHei;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:\9ED1\4F53;
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:MingLiU;
	panose-1:2 1 6 9 0 1 1 1 1 1;
	mso-font-alt:\7D30\660E\9AD4;
	mso-font-charset:136;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:1 134742016 16 0 1048576 0;}
@font-face
	{font-family:Mincho;
	panose-1:2 2 6 9 4 3 5 8 3 5;
	mso-font-alt:\660E\671D;
	mso-font-charset:128;
	mso-generic-font-family:roman;
	mso-font-pitch:fixed;
	mso-font-signature:1 134676480 16 0 131072 0;}
@font-face
	{font-family:Gulim;
	panose-1:2 11 6 0 0 1 1 1 1 1;
	mso-font-alt:\AD74\B9BC;
	mso-font-charset:129;
	mso-generic-font-family:roman;
	mso-font-pitch:fixed;
	mso-font-signature:1 151388160 16 0 524288 0;}
@font-face
	{font-family:Century;
	panose-1:2 4 6 4 5 5 5 2 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"Angsana New";
	panose-1:2 2 6 3 5 4 5 2 3 4;
	mso-font-charset:222;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:16777217 0 0 0 65536 0;}
@font-face
	{font-family:"Cordia New";
	panose-1:2 11 3 4 2 2 2 2 2 4;
	mso-font-charset:222;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:16777217 0 0 0 65536 0;}
@font-face
	{font-family:Mangal;
	panose-1:0 0 4 0 0 0 0 0 0 0;
	mso-font-charset:1;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:8192 0 0 0 0 0;}
@font-face
	{font-family:Latha;
	panose-1:2 0 4 0 0 0 0 0 0 0;
	mso-font-charset:1;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:262144 0 0 0 0 0;}
@font-face
	{font-family:Sylfaen;
	panose-1:1 10 5 2 5 3 6 3 3 3;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:67110535 0 0 0 159 0;}
@font-face
	{font-family:Vrinda;
	panose-1:0 0 4 0 0 0 0 0 0 0;
	mso-font-charset:1;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:0 0 0 0 0 0;}
@font-face
	{font-family:Raavi;
	panose-1:2 0 5 0 0 0 0 0 0 0;
	mso-font-charset:1;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:0 0 0 0 0 0;}
@font-face
	{font-family:Shruti;
	panose-1:2 0 5 0 0 0 0 0 0 0;
	mso-font-charset:1;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:0 0 0 0 0 0;}
@font-face
	{font-family:Sendnya;
	panose-1:0 0 4 0 0 0 0 0 0 0;
	mso-font-charset:1;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:0 0 0 0 0 0;}
@font-face
	{font-family:Gautami;
	panose-1:2 0 5 0 0 0 0 0 0 0;
	mso-font-charset:1;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:0 0 0 0 0 0;}
@font-face
	{font-family:Tunga;
	panose-1:0 0 4 0 0 0 0 0 0 0;
	mso-font-charset:1;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:0 0 0 0 0 0;}
@font-face
	{font-family:"Estrangelo Edessa";
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:1;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-536869121 1107305727 33554432 0 415 0;}
@font-face
	{font-family:"Yu Gothic";
	panose-1:2 11 4 0 0 0 0 0 0 0;
	mso-font-alt:\6E38\30B4\30B7\30C3\30AF;
	mso-font-charset:128;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:1 134676480 16 0 131072 0;}
@font-face
	{font-family:DengXian;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:\7B49\7EBF;
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"Calibri Light";
	panose-1:2 15 3 2 2 2 4 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"Palatino Linotype";
	panose-1:2 4 5 2 5 5 5 3 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Verdana;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Aptos;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:536871559 3 0 0 415 0;}
@font-face
	{font-family:"Aptos Display";
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:536871559 3 0 0 415 0;}
@font-face
	{font-family:"Segoe UI Emoji";
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:auto;
	mso-font-signature:0 0 0 0 0 0;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-536869121 64767 1 0 415 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;}
h1
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 1 Char";
	mso-style-next:Normal;
	margin-top:.25in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:20.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	font-weight:normal;}
h2
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 2 Char";
	mso-style-next:Normal;
	margin-top:8.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:16.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	font-weight:normal;}
h3
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 3 Char";
	mso-style-next:Normal;
	margin-top:8.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:14.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	font-weight:normal;}
h4
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 4 Char";
	mso-style-next:Normal;
	margin-top:4.0pt;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:4;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	font-weight:normal;
	font-style:italic;}
h5
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 5 Char";
	mso-style-next:Normal;
	margin-top:4.0pt;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:5;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	font-weight:normal;}
h6
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 6 Char";
	mso-style-next:Normal;
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:6;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	font-weight:normal;
	font-style:italic;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 7 Char";
	mso-style-next:Normal;
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:7;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 8 Char";
	mso-style-next:Normal;
	margin:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:8;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#272727;
	mso-themecolor:text1;
	mso-themetint:216;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	font-style:italic;}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 9 Char";
	mso-style-next:Normal;
	margin:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:9;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#272727;
	mso-themecolor:text1;
	mso-themetint:216;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Title Char";
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:28.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;
	mso-ligatures:standardcontextual;}
p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst
	{mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Title Char";
	mso-style-next:Normal;
	mso-style-type:export-only;
	margin:0in;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:28.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;
	mso-ligatures:standardcontextual;}
p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle
	{mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Title Char";
	mso-style-next:Normal;
	mso-style-type:export-only;
	margin:0in;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:28.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;
	mso-ligatures:standardcontextual;}
p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast
	{mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Title Char";
	mso-style-next:Normal;
	mso-style-type:export-only;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:28.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;
	mso-ligatures:standardcontextual;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{mso-style-priority:11;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Subtitle Char";
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:14.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;
	letter-spacing:.75pt;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	mso-add-space:auto;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-type:export-only;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	mso-add-space:auto;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-type:export-only;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	mso-add-space:auto;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-type:export-only;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	mso-add-space:auto;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;}
p.MsoQuote, li.MsoQuote, div.MsoQuote
	{mso-style-priority:29;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Quote Char";
	mso-style-next:Normal;
	margin-top:8.0pt;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	text-align:center;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	color:#404040;
	mso-themecolor:text1;
	mso-themetint:191;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	font-style:italic;}
p.MsoIntenseQuote, li.MsoIntenseQuote, div.MsoIntenseQuote
	{mso-style-priority:30;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Intense Quote Char";
	mso-style-next:Normal;
	margin-top:.25in;
	margin-right:.6in;
	margin-bottom:.25in;
	margin-left:.6in;
	text-align:center;
	line-height:115%;
	mso-pagination:widow-orphan;
	border:none;
	mso-border-top-alt:solid #0F4761 .5pt;
	mso-border-top-themecolor:accent1;
	mso-border-top-themeshade:191;
	mso-border-bottom-alt:solid #0F4761 .5pt;
	mso-border-bottom-themecolor:accent1;
	mso-border-bottom-themeshade:191;
	padding:0in;
	mso-padding-alt:10.0pt 0in 10.0pt 0in;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;
	font-style:italic;}
span.MsoIntenseEmphasis
	{mso-style-priority:21;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-style:italic;}
span.MsoIntenseReference
	{mso-style-priority:32;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	font-variant:small-caps;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	letter-spacing:.25pt;
	font-weight:bold;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 1";
	mso-ansi-font-size:20.0pt;
	mso-bidi-font-size:20.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 2";
	mso-ansi-font-size:16.0pt;
	mso-bidi-font-size:16.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 3";
	mso-ansi-font-size:14.0pt;
	mso-bidi-font-size:14.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Heading4Char
	{mso-style-name:"Heading 4 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 4";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-style:italic;}
span.Heading5Char
	{mso-style-name:"Heading 5 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 5";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Heading6Char
	{mso-style-name:"Heading 6 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 6";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;
	font-style:italic;}
span.Heading7Char
	{mso-style-name:"Heading 7 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 7";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;}
span.Heading8Char
	{mso-style-name:"Heading 8 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 8";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#272727;
	mso-themecolor:text1;
	mso-themetint:216;
	font-style:italic;}
span.Heading9Char
	{mso-style-name:"Heading 9 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 9";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#272727;
	mso-themecolor:text1;
	mso-themetint:216;}
span.TitleChar
	{mso-style-name:"Title Char";
	mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:Title;
	mso-ansi-font-size:28.0pt;
	mso-bidi-font-size:28.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;}
span.SubtitleChar
	{mso-style-name:"Subtitle Char";
	mso-style-priority:11;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:Subtitle;
	mso-ansi-font-size:14.0pt;
	mso-bidi-font-size:14.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;
	letter-spacing:.75pt;}
span.QuoteChar
	{mso-style-name:"Quote Char";
	mso-style-priority:29;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:Quote;
	color:#404040;
	mso-themecolor:text1;
	mso-themetint:191;
	font-style:italic;}
span.IntenseQuoteChar
	{mso-style-name:"Intense Quote Char";
	mso-style-priority:30;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Intense Quote";
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-style:italic;}
p.msonormal0, li.msonormal0, div.msonormal0
	{mso-style-name:msonormal;
	mso-style-unhide:no;
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";}
span.msoIns
	{mso-style-type:export-only;
	mso-style-name:"";
	text-decoration:underline;
	text-underline:single;
	color:teal;}
span.msoDel
	{mso-style-type:export-only;
	mso-style-name:"";
	text-decoration:line-through;
	color:red;}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;}
.MsoPapDefault
	{mso-style-type:export-only;
	margin-bottom:8.0pt;
	line-height:115%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.WordSection1
	{page:WordSection1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin-top:0in;
	mso-para-margin-right:0in;
	mso-para-margin-bottom:8.0pt;
	mso-para-margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-font-kerning:1.0pt;
	mso-ligatures:standardcontextual;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1026"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in;word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoNormal>&lt;!DOCTYPE html&gt;<o:p></o:p></p>

<p class=MsoNormal>&lt;html lang=&quot;en&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&lt;head&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;meta charset=&quot;UTF-8&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,
initial-scale=1.0&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;title&gt;Bandon Dunes Golf Trip Summary&lt;/title&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;script src=&quot;https://cdn.tailwindcss.com&quot;&gt;&lt;/script&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&amp;display=swap&quot;
rel=&quot;stylesheet&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;style&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; body {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-family: 'Inter',
sans-serif;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color:
#f0f4f8;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: #333;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; .container {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; max-width: 1200px;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 0 auto;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 1rem;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color:
#fff;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 0.75rem;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; box-shadow: 0 4px 6px
rgba(0, 0, 0, 0.1);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; .card {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color:
#fff;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 0.75rem;
/* rounded-xl */<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; box-shadow: 0 4px 6px
rgba(0, 0, 0, 0.1);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 1.5rem;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 1.5rem;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; .table-auto {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 100%;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-collapse: collapse;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-size: 0.875rem;
/* Standard font size for table content */<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; .table-auto th, .table-auto td {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 0.75rem;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-bottom: 1px
solid #e2e8f0;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; text-align: left;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; .table-auto th {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color:
#f8fafc;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-weight: 600;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: #4a5568;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; text-transform: uppercase;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-size: 0.875rem;
/* Standard font size for all headers */<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; /* Removed specific smaller font
size for tee-time-pairings-container th */<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; .table-auto tr:last-child td {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-bottom: none;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; .table-auto tbody tr:hover {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color:
#f0f4f8;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; h1 {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-size: 2.25rem;
/* text-4xl */<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 1.5rem;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; h2 {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-size: 1.5rem;
/* text-2xl */<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 1rem;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; h3 {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-size: 1.25rem;
/* text-xl */<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 1rem;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; /* Ensure tables stack
vertically on small screens and side-by-side on md and larger */<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; .flex-col.md\:flex-row {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flex-direction: column;
/* Default to column for small screens */<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; @media (min-width: 768px) { /*
md breakpoint */<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
.flex-col.md\:flex-row {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flex-direction:
row; /* Change to row for medium and larger screens */<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .flex-1.md\:w-1\/2
{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width:
50%; /* Each takes half width on medium and larger screens */<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; /* Style for the handicap row */<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; .player-handicap-row td {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color:
#e0f2fe; /* Light blue shading */<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;/style&gt;<o:p></o:p></p>

<p class=MsoNormal>&lt;/head&gt;<o:p></o:p></p>

<p class=MsoNormal>&lt;body class=&quot;p-4 bg-gray-100 min-h-screen flex
items-center justify-center&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;div class=&quot;container bg-white
rounded-xl shadow-lg p-6 md:p-8 lg:p-10&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- Consolidated and
Left-Aligned Title without Golf Club Logo --&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &lt;h1 class=&quot;text-3xl
md:text-4xl font-bold text-green-800 mb-8 text-left&quot; id=&quot;main-trip-summary-title&quot;&gt;Bandon
Dunes Golf Trip Summary&lt;/h1&gt;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- Player Selection (Moved
to top) --&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=&quot;card
mb-6&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=&quot;mb-4
player-select-section w-full md:w-1/2&quot;&gt; &lt;!-- Adjusted to w-full by
default, md:w-1/2 for larger screens --&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;label
for=&quot;player-select&quot; class=&quot;block text-lg font-medium
text-red-600 mb-2&quot;&gt;Select Player:&lt;/label&gt; &lt;!-- Text color
changed to red --&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;select
id=&quot;player-select&quot; class=&quot;mt-1 block w-full pl-3 pr-10 py-2
text-base border-gray-300 focus:outline-none focus:ring-green-500
focus:border-green-500 sm:text-sm rounded-md&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;!-- Options will be populated by JavaScript --&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/select&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=&quot;flex
flex-col md:flex-row gap-6 mb-6&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- Stableford
Points System --&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=&quot;card
flex-1 md:w-1/2&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h2
class=&quot;text-2xl font-semibold text-gray-800 mb-4&quot;&gt;Stableford
Points System&lt;/h2&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;table
class=&quot;table-auto&quot; id=&quot;stableford-table&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;thead&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;tr&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;th class=&quot;px-4 py-2&quot;&gt;Score
Relative to Par&lt;/th&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;th class=&quot;px-4 py-2&quot;&gt;Points&lt;/th&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;th class=&quot;px-4 py-2&quot;&gt;Score
Relative to Par&lt;/th&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;th class=&quot;px-4 py-2&quot;&gt;Points&lt;/th&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/tr&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;/thead&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;tbody&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;tr&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;border px-4
py-2&quot;&gt;Double Eagle (Par 4 or 5)&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;border px-4
py-2&quot;&gt;20&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;border px-4
py-2&quot;&gt;Par&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;border px-4
py-2&quot;&gt;3&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/tr&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;tr&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;border px-4
py-2&quot;&gt;Hole-in-One&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;border px-4
py-2&quot;&gt;15&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;border px-4
py-2&quot;&gt;Bogey&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;border px-4
py-2&quot;&gt;2&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/tr&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;tr&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;border px-4
py-2&quot;&gt;Eagle&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;border px-4
py-2&quot;&gt;10&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;border px-4
py-2&quot;&gt;Double Bogey&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;border px-4
py-2&quot;&gt;1&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/tr&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;tr&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;border px-4
py-2&quot;&gt;Birdie&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;border px-4
py-2&quot;&gt;5&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;border px-4
py-2&quot;&gt;DNF/Triple +&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;td class=&quot;px-4 py-2&quot;&gt;0&lt;/td&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/tr&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- Player Handicap row will be added here by
JavaScript --&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;/tbody&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/table&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- Notes
Table --&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=&quot;card
flex-1 md:w-1/2&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h2
class=&quot;text-2xl font-semibold text-gray-800 mb-4&quot;&gt;Notes&lt;/h2&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;table
class=&quot;table-auto&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;thead&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;tr&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;th class=&quot;px-4 py-2&quot;&gt;Note&lt;/th&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/tr&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;/thead&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;tbody id=&quot;notes-table-body&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- Notes will be populated by JavaScript
--&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;/tbody&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/table&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- Tee Time Pairings (Moved
to bottom) --&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=&quot;card&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h2 class=&quot;text-2xl
font-semibold text-gray-800 mb-4&quot;&gt;Tee Time Pairings&lt;/h2&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=&quot;tee-time-pairings-container&quot;
class=&quot;overflow-x-auto&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h3
class=&quot;text-xl font-semibold text-gray-800 mb-4&quot; id=&quot;current-player-tee-times-title&quot;&gt;&lt;/h3&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;table
class=&quot;table-auto&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;thead&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;tr&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;th class=&quot;px-4 py-2&quot;&gt;Date&lt;/th&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;th class=&quot;px-4 py-2&quot;&gt;Time&lt;/th&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;th class=&quot;px-4 py-2&quot;&gt;Estimated
Completion Time&lt;/th&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;th class=&quot;px-4 py-2&quot;&gt;Course&lt;/th&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;th class=&quot;px-4 py-2&quot;&gt;Caddie&lt;/th&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;th class=&quot;px-4 py-2&quot;&gt;Playing
Partners (Handicap)&lt;/th&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/tr&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;/thead&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;tbody id=&quot;tee-time-pairings-body&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/tbody&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/table&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;script&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; // Raw CSV data for golf
pairings<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const csvData = `Date,Time,Course,Player,Player,Player,Player,Caddie?,Notes,,Start
time adjusted,Complete Estimate,,Time adjustment,,Course,Estimated play
time,,,,,,770,210<o:p></o:p></p>

<p class=MsoNormal>2025-08-20,2:15 p.m. ,Shorty's,TBD,TBD,TBD,TBD,,Bill to
individuals,,2025-08-20 14:15:00,2025-08-20
16:15:00,,855,,Shorty's,2,,,,,,780,220<o:p></o:p></p>

<p class=MsoNormal>2025-08-20,2:40 p.m. ,Bandon Dunes,Cory Higgins,Kevin
Newell,Mike Newell,Rob Small,YES,2 Caddies,,2025-08-20 14:40:00,2025-08-20
19:10:00,,880,,Bandon Dunes,4.5,,,,,,790,230<o:p></o:p></p>

<p class=MsoNormal>2025-08-20,2:50 p.m. ,Bandon Dunes,Zach Deines,Johnathn
Resetar,Ryan Hohn,Jacob Emert,,,,2025-08-20 14:50:00,2025-08-20
19:20:00,,890,,Pacific Dunes,4.5,,,,,,800,240<o:p></o:p></p>

<p class=MsoNormal>2025-08-20,3:00 p.m.,Bandon Dunes,Bryan Wolfe,Matt
Akers,Paul Parker,Andrew Akers,,,,2025-08-20 15:00:00,2025-08-20
19:30:00,,900,,Bandon Preserve,2,,,,,,810,250<o:p></o:p></p>

<p class=MsoNormal>2025-08-20,3:10 p.m. ,Bandon Dunes,Kevan Oyama,Bob
Owlett,Nick Zangardi,James Adolfson,,,,2025-08-20 15:10:00,2025-08-20
19:40:00,,910,,Bandon Trails,4.5,,,,,,820,260<o:p></o:p></p>

<p class=MsoNormal>2025-08-20,3:20 p.m. ,Bandon Dunes,Vikas Bhasin,Daniel
Passino,Charlie Hildebrand,Hisham Sayeedi,,,,2025-08-20 15:20:00,2025-08-20
19:50:00,,920,,Old Macdonald,4.5,,,,,,830,270<o:p></o:p></p>

<p class=MsoNormal>2025-08-20,6:45 p.m. ,Shorty's,Brandon Itaoka,Cory
Micheel,AD Hoffman,Will Quarles,,Bill to individuals,,2025-08-20
18:45:00,2025-08-20 20:45:00,,1125,,Sheep Ranch,4.5,,,,,,840,280<o:p></o:p></p>

<p class=MsoNormal>2025-08-21,7:30 a.m. ,Pacific Dunes,Vikas Bhasin,Charlie
Hildebrand,Hisham Sayeedi,Daniel Passino,,,,2025-08-21 07:30:00,2025-08-21
12:00:00,,450,,,,,,,,,850,290<o:p></o:p></p>

<p class=MsoNormal>2025-08-21,7:40 a.m. ,Pacific Dunes,Cory Higgins,Matt
Akers,Andrew Akers,James Adolfson,,,,2025-08-21 07:40:00,2025-08-21
12:10:00,,460,,,,,,,,,860,300<o:p></o:p></p>

<p class=MsoNormal>2025-08-21,7:50 a.m. ,Pacific Dunes,Bob Owlett,Kevin
Newell,Mike Newell,Rob Small,,,,2025-08-21 07:50:00,2025-08-21
12:20:00,,470,,,,,,,,,870,310<o:p></o:p></p>

<p class=MsoNormal>2025-08-21,8:00 a.m. ,Pacific Dunes,Kevan Oyama,Zach
Deines,Nick Zangardi,Johnathn Resetar,,,,2025-08-21 08:00:00,2025-08-21
12:30:00,,480,,,,,,,,,880,320<o:p></o:p></p>

<p class=MsoNormal>2025-08-21,8:10 a.m. ,Pacific Dunes,Brandon Itaoka,Ryan
Hohn,Paul Parker,Jacob Emert,,,,2025-08-21 08:10:00,2025-08-21
12:40:00,,490,,,,,,,,,890,330<o:p></o:p></p>

<p class=MsoNormal>2025-08-21,8:20 a.m. ,Pacific Dunes,AD Hoffman,Bryan
Wolfe,Will Quarles,Cory Micheel,,,,2025-08-21 08:20:00,2025-08-21
12:50:00,,500,,,,,,,,,900,340<o:p></o:p></p>

<p class=MsoNormal>2025-08-21,1:10 p.m. ,Bandon Dunes,Charlie Hildebrand,Hisham
Sayeedi,Daniel Passino,Vikas Bhasin,,REPLAY,,2025-08-21 13:10:00,2025-08-21
17:40:00,,790,,,,,,,,,910,350<o:p></o:p></p>

<p class=MsoNormal>2025-08-21,1:20 p.m. ,Bandon Dunes,Kevan Oyama,Cory
Higgins,Jacob Emert,Mike Newell,,,,2025-08-21 13:20:00,2025-08-21
17:50:00,,800,,Time until next tee time,,,,,,,920,360<o:p></o:p></p>

<p class=MsoNormal>2025-08-21,1:30 p.m. ,Bandon Dunes,Zach Deines,Paul
Parker,Johnathn Resetar,James Adolfson,,,,2025-08-21 13:30:00,2025-08-21
18:00:00,,810,,Name Not Found in Morning Group,Name Not Found in Morning
Group,Name Not Found in Morning Group,Name Not Found in Morning
Group,,,,930,370<o:p></o:p></p>

<p class=MsoNormal>2025-08-21,1:40 p.m. ,Bandon Dunes,Cory Micheel,Bob
Owlett,Will Quarles,AD Hoffman,,,,2025-08-21 13:40:00,2025-08-21
18:10:00,,820,,1080,1264.9999999953434,1069.9999999988358,1090.0000000011642,,,,940,380<o:p></o:p></p>

<p class=MsoNormal>2025-08-21,1:50 p.m. ,Bandon Dunes,Ryan Hohn,Nick
Zangardi,Bryan Wolfe,,,,,2025-08-21 13:50:00,2025-08-21
18:20:00,,830,,1090.0000000011642,1080,1090.0000000011642,1274.9999999965075,,,,950,390<o:p></o:p></p>

<p class=MsoNormal>2025-08-21,2:15 p.m. ,Bandon Preserve,Matt Akers,Andrew
Akers,Kevin Newell,Rob Small,Brandon Itaoka,Bill to individuals,,2025-08-21
14:15:00,2025-08-21 16:15:00,,855,,1080,1110.0000000034925,1080,1080,,,,960,400<o:p></o:p></p>

<p class=MsoNormal>2025-08-21,6:00 p.m.,Bandon Preserve,TBD - Likely Replay
from main course,,,,,Bill to individuals,,2025-08-21 18:00:00,2025-08-21
20:00:00,,1080,,1100.0000000023283,1110.0000000034925,1090.0000000011642,Name
Not Found in Morning Group,,,,970,410<o:p></o:p></p>

<p class=MsoNormal>2025-08-22,7:30 a.m. ,Bandon Trails,AD Hoffman,Bryan
Wolfe,Bob Owlett,Cory Micheel,,,,2025-08-22 07:30:00,2025-08-22
12:00:00,,450,,1319.9999999965075,1319.9999999965075,1145.0000000023283,1145.0000000023283,,,,980,420<o:p></o:p></p>

<p class=MsoNormal>2025-08-22,7:40 a.m. ,Bandon Trails,Cory Higgins,Brandon
Itaoka,Ryan Hohn,Paul Parker,,,,2025-08-22 07:40:00,2025-08-22
12:10:00,,460,,Name Not Found in Morning Group,Name Not Found in Morning
Group,Name Not Found in Morning Group,Name Not Found in Morning
Group,,,,990,430<o:p></o:p></p>

<p class=MsoNormal>2025-08-22,7:50 a.m. ,Bandon Trails,Mike Newell,Nick
Zangardi,Kevin Newell,Rob Small,,,,2025-08-22 07:50:00,2025-08-22
12:20:00,,470,,,,,,,,,1000,440<o:p></o:p></p>

<p class=MsoNormal>2025-08-22,8:00 a.m. ,Bandon Trails,Zach Deines,Jacob
Emert,Johnathn Resetar,James Adolfson,,,,2025-08-22 08:00:00,2025-08-22
12:30:00,,480,,,,,,,,,1010,450<o:p></o:p></p>

<p class=MsoNormal>2025-08-22,8:10 a.m. ,Bandon Trails,Vikas Bhasin,Daniel
Passino,Hisham Sayeedi,Daniel Passino,,,,2025-08-22 08:10:00,2025-08-22
12:40:00,,490,,,,,,,,,1020,460<o:p></o:p></p>

<p class=MsoNormal>2025-08-22,8:20 a.m. ,Bandon Trails,Kevan Oyama,Matt
Akers,Andrew Akers,Will Quarles,,,,2025-08-22 08:20:00,2025-08-22
12:50:00,,500,,,,,,,,,1030,470<o:p></o:p></p>

<p class=MsoNormal>2025-08-22,1:10 p.m. ,Pacific Dunes,Cory Higgins,Vikas
Bhasin,Cory Micheel,Mike Newell,,REPLAY,,2025-08-22 13:10:00,2025-08-22
17:40:00,,790,,,,,,,,,1040,480<o:p></o:p></p>

<p class=MsoNormal>2025-08-22,1:20 p.m. ,Pacific Dunes,Bob Owlett,Nick
Zangardi,Jacob Emert,Zach Deines,,,,2025-08-22 13:20:00,2025-08-22
17:50:00,,800,,,,,,,,,1050,490<o:p></o:p></p>

<p class=MsoNormal>2025-08-22,1:30 p.m. ,Pacific Dunes,James Adolfson,AD
Hoffman,Bryan Wolfe,Will Quarles,,,,2025-08-22 13:30:00,2025-08-22
18:00:00,,810,,,,,,,,,1060,500<o:p></o:p></p>

<p class=MsoNormal>2025-08-22,1:40 p.m. ,Pacific Dunes,Kevan Oyama,Johnathn
Resetar,,,,,,2025-08-22 13:40:00,2025-08-22 18:10:00,,820,,,,,,,,,1070,510<o:p></o:p></p>

<p class=MsoNormal>2025-08-22,2:15 p.m. ,Shorty's,Brandon Itaoka,Ryan Hohn,Paul
Parker,Charlie Hildebrand,Hisham Sayeedi,Bill to individuals,,2025-08-22
14:15:00,2025-08-22 16:15:00,,855,,,,,,,,,1080,520<o:p></o:p></p>

<p class=MsoNormal>2025-08-22,6:30 p.m. ,Shorty's,Daniel Passino,Andrew
Akers,Kevin Newell,Rob Small,Matt Akers,Bill to individuals,,2025-08-22
18:30:00,2025-08-22 20:30:00,,1110,,,,,,,,,1090,530<o:p></o:p></p>

<p class=MsoNormal>2025-08-23,7:30 a.m. ,Old Macdonald,Kevan Oyama,Mike
Newell,Bob Owlett,Nick Zangardi,,,,2025-08-23 07:30:00,2025-08-23
12:00:00,,450,,,,,,,,,1100,540<o:p></o:p></p>

<p class=MsoNormal>2025-08-23,7:40 a.m. ,Old Macdonald,Cory Higgins,Brandon
Itaoka,Jacob Emert,Zach Deines,,,,2025-08-23 07:40:00,2025-08-23
12:10:00,,460,,,,,,,,,1110,550<o:p></o:p></p>

<p class=MsoNormal>2025-08-23,7:50 a.m. ,Old Macdonald,Rob Small,Matt
Akers,Andrew Akers,Kevin Newell,,,,2025-08-23 07:50:00,2025-08-23
12:20:00,,470,,,,,,,,,1120,560<o:p></o:p></p>

<p class=MsoNormal>2025-08-23,8:00 a.m. ,Old Macdonald,Johnathn Resetar,Ryan
Hohn,Paul Parker,James Adolfson,,,,2025-08-23 08:00:00,2025-08-23
12:30:00,,480,,,,,,,,,1130,570<o:p></o:p></p>

<p class=MsoNormal>2025-08-23,8:10 a.m. ,Old Macdonald,Vikas Bhasin,Daniel
Passino,Hisham Sayeedi,Daniel Passino,,,,2025-08-23 08:10:00,2025-08-23
12:40:00,,490,,,,,,,,,1140,580<o:p></o:p></p>

<p class=MsoNormal>2025-08-23,8:20 a.m. ,Old Macdonald,AD Hoffman,Bryan
Wolfe,Will Quarles,Cory Micheel,,,,2025-08-23 08:20:00,2025-08-23
12:50:00,,500,,,,,,,,,1150,590<o:p></o:p></p>

<p class=MsoNormal>2025-08-23,1:10 p.m. ,Bandon Trails,Kevan Oyama,Ryan
Hohn,Nick Zangardi,,,REPLAY,,2025-08-23 13:10:00,2025-08-23
17:40:00,,790,,,,,,,,,1160,600<o:p></o:p></p>

<p class=MsoNormal>25-08-23,1:20 p.m. ,Bandon Trails,James Adolfson,Johnathn
Resetar,Brandon Itaoka,,,,,2025-08-23 13:20:00,2025-08-23
17:50:00,,800,,,,,,,,,1170,610<o:p></o:p></p>

<p class=MsoNormal>2025-08-23,1:30 p.m. ,Bandon Trails,Cory Micheel,Bob
Owlett,Will Quarles,AD Hoffman,,,,2025-08-23 13:30:00,2025-08-23
18:00:00,,810,,,,,,,,,1180,620<o:p></o:p></p>

<p class=MsoNormal>2025-08-23,1:10 p.m. ,Sheep Ranch,Cory Higgins,Matt
Akers,Andrew Akers,Jacob Emert,,,,2025-08-23 13:10:00,2025-08-23
17:40:00,,790,,,,,,,,,1190,630<o:p></o:p></p>

<p class=MsoNormal>2025-08-23,1:20 p.m.,Sheep Ranch,Mike Newell,Zach
Deines,Paul Parker,Bryan Wolfe,,,,2025-08-23 13:20:00,2025-08-23
17:50:00,,800,,,,,,,,,1200,640<o:p></o:p></p>

<p class=MsoNormal>2025-08-23,2:15 p.m. ,Bandon Preserve,Kevin Newell,Rob
Small,Vikas Bhasin,Charlie Hildebrand,,Bill to individuals,,2025-08-23
14:15:00,2025-08-23 16:15:00,,855,,,,,,,,,1210,650<o:p></o:p></p>

<p class=MsoNormal>2025-08-23,6:00 p.m. ,Bandon Preserve,Hisham Sayeedi,Daniel
Passino,+ replay from main course,,,Bill to individuals,,2025-08-23
18:00:00,2025-08-23 20:00:00,,1080,,,,,,,,,1220,660<o:p></o:p></p>

<p class=MsoNormal>2025-08-24, 7:00 a.m.,Sheep Ranch,Kevan Oyama,AD
Hoffman,Kevin Newell,Rob Small,,,,2025-08-24 07:00:00,2025-08-24
11:30:00,,420,,,,,,,,,1230,670<o:p></o:p></p>

<p class=MsoNormal>2025-08-24,7:10 a.m. ,Sheep Ranch,Vikas Bhasin,Daniel
Passino,Hisham Sayeedi,Charlie Hildebrand,,,,2025-08-24 07:10:00,2025-08-24
11:40:00,,430,,,,,,,,,1240,680<o:p></o:p></p>

<p class=MsoNormal>2025-08-24,7:20 a.m.,Sheep Ranch,Cory Higgins,Bob
Owlett,Mike Newell,Cory Micheel,,,,2025-08-24 07:20:00,2025-08-24
11:50:00,,440,,,,,,,,,1250,690<o:p></o:p></p>

<p class=MsoNormal>2025-08-24,7:30 a.m.,Sheep Ranch,Zach Deines,Johnathn
Resetar,Jacob Emert,Brandon Itaoka,,,,2025-08-24 07:30:00,2025-08-24
12:00:00,,450,,,,,,,,,1260,700<o:p></o:p></p>

<p class=MsoNormal>2025-08-24,7:40 a.m.,Sheep Ranch,James Adolfson,Ryan
Hohn,Nick Zangardi,Paul Parker,,,,2025-02-24 07:40:00,2025-08-24
12:10:00,,460,,,,,,,,,1270,710<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1280,720<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1290,730<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1300,740<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1310,750<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1320,760<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1330,770<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1340,780<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1350,790<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1360,800<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1370,810<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1380,820<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1390,830<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1400,840<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1410,850<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1420,860<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1430,870<o:p></o:p></p>

<p class=MsoNormal>,,,,,,,,,,,,,,,,,,,,,,1440,880`;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; // Raw CSV data for caddy
workbook<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const caddyWorkbookCsvData = `Timestamp,Email
Address,Caddy / Fore caddy selection ... AM course will differ from PM course
[Wednesday 8/20 (PM round only)],Caddy / Fore caddy selection ... AM course
will differ from PM course [Thursday 8/21 - AM Round],Caddy / Fore caddy
selection ... AM course will differ from PM course [Thursday 8/21 - PM
Round],Caddy / Fore caddy selection ... AM course will differ from PM course
[Friday 8/22 - AM Round],Caddy / Fore caddy selection ... AM course will differ
from PM course [Friday 8/22 - PM Round],Caddy / Fore caddy selection ... AM
course will differ from PM course [Saturday 8/23 - AM Round],Caddy / Fore caddy
selection ... AM course will differ from PM course [Saturday 8/23 - PM
Round],Caddy / Fore caddy selection ... AM course will differ from PM course
[Sunday 8/24 (AM round only)]<o:p></o:p></p>

<p class=MsoNormal>Zach Deines,zachmd@gmail.com,No Caddy,No Caddy,No Caddy,No
Caddy,No Caddy,No Caddy,No Caddy,No Caddy<o:p></o:p></p>

<p class=MsoNormal>Cory Higgins,cory.higgins@gmail.com,No Caddy,Caddy,No
Caddy,No Caddy,Caddy,No Caddy,No Caddy,Caddy<o:p></o:p></p>

<p class=MsoNormal>Nick Zangardi,nickzangardi@gmail.com,Caddy,Caddy,No
Caddy,Caddy,No Caddy,Caddy,No Caddy,No Caddy<o:p></o:p></p>

<p class=MsoNormal>Johnathn Resetar,johnresetar@hotmail.com,No Caddy,No
Caddy,No Caddy,No Caddy,No Caddy,No Caddy,No Caddy,No Caddy<o:p></o:p></p>

<p class=MsoNormal>Pranav Shah,pranav.s.shah@outlook.com,Fore Caddy,Fore
Caddy,Fore Caddy,No Caddy,No Caddy,No Caddy,No Caddy,No Caddy<o:p></o:p></p>

<p class=MsoNormal>Mike Newell,mjnewell28@gmail.com,Caddy,Caddy,No
Caddy,Caddy,No Caddy,Caddy,No Caddy,Caddy<o:p></o:p></p>

<p class=MsoNormal>Jacob Emert,jacob.e.emert@gmail.com,Caddy,Caddy,No
Caddy,Caddy,No Caddy,Caddy,No Caddy,Caddy<o:p></o:p></p>

<p class=MsoNormal>Ryan Hohn,rhohn67@gmail.com,No Caddy,No Caddy,No Caddy,No
Caddy,No Caddy,No Caddy,No Caddy,No Caddy<o:p></o:p></p>

<p class=MsoNormal>Bryan Wolfe,bryanwolfe1993@gmail.com,No Caddy,Caddy,Caddy,No
Caddy,No Caddy,No Caddy,No Caddy,No Caddy<o:p></o:p></p>

<p class=MsoNormal>Vikas Bhasin,vikasopicaso@gmail.com,No Caddy,Caddy,No
Caddy,Caddy,No Caddy,Caddy,Caddy,No Caddy<o:p></o:p></p>

<p class=MsoNormal>Cory Micheel,cory.micheel@gmail.com,No Caddy,Fore Caddy,No
Caddy,Fore Caddy,No Caddy,Fore Caddy,No Caddy,No Caddy<o:p></o:p></p>

<p class=MsoNormal>AD Hoffman,adonis.hoffman@gmail.com,No Caddy,Caddy,Fore
Caddy,Caddy,Fore Caddy,Caddy,Fore Caddy,Caddy<o:p></o:p></p>

<p class=MsoNormal>Bob Owlett,bobowlett@gmail.com,No Caddy,Caddy,Caddy,No
Caddy,No Caddy,No Caddy,No Caddy,No Caddy<o:p></o:p></p>

<p class=MsoNormal>Paul Parker,Paul.W.Parker8@gmail.com,No Caddy,No Caddy,No
Caddy,No Caddy,No Caddy,No Caddy,No Caddy,No Caddy<o:p></o:p></p>

<p class=MsoNormal>Kevan Oyama,kevan.oyama@gmail.com,No Caddy,No Caddy,No
Caddy,No Caddy,No Caddy,No Caddy,No Caddy,No Caddy<o:p></o:p></p>

<p class=MsoNormal>Hisham Sayeedi,hsayeedi@gmail.com,No Caddy,Caddy,No
Caddy,Caddy,No Caddy,Caddy,No Caddy,Caddy<o:p></o:p></p>

<p class=MsoNormal>Daniel Passino,dpassino@umich.edu,Caddy,Caddy,No
Caddy,Caddy,No Caddy,Caddy,No Caddy,Caddy<o:p></o:p></p>

<p class=MsoNormal>Matt Akers,mjakers1@gmail.com,No Caddy,No Caddy,No Caddy,No
Caddy,No Caddy,No Caddy,No Caddy,No Caddy<o:p></o:p></p>

<p class=MsoNormal>James Adolfson,jamesadolfson123@gmail.com,No Caddy,No
Caddy,No Caddy,No Caddy,No Caddy,No Caddy,No Caddy,No Caddy<o:p></o:p></p>

<p class=MsoNormal>Kevin Newell,newellkj@gmail.com,Caddy,Caddy,No
Caddy,Caddy,No Caddy,Caddy,No Caddy,Caddy<o:p></o:p></p>

<p class=MsoNormal>Rob Small,rob@compaero.com,Caddy,Caddy,No Caddy,Caddy,No
Caddy,Caddy,No Caddy,Caddy<o:p></o:p></p>

<p class=MsoNormal>Andrew Akers,andrewakers9@gmail.com,No Caddy,No Caddy,No
Caddy,No Caddy,No Caddy,No Caddy,No Caddy,No Caddy<o:p></o:p></p>

<p class=MsoNormal>Brandon Itaoka,urmessiah57@gmail.com,No Caddy,No Caddy,No
Caddy,No Caddy,No Caddy,No Caddy,No Caddy,No Caddy<o:p></o:p></p>

<p class=MsoNormal>Charlie Hildebrand,cdhildy@gmail.com,No Caddy,Caddy,No
Caddy,Caddy,No Caddy,Caddy,No Caddy,Caddy<o:p></o:p></p>

<p class=MsoNormal>`;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; // Handicap data provided by the
user<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const handicaps = {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Mike
Newell&quot;: 1,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Andrew
Akers&quot;: 2,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;James
Adolfson&quot;: 3,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Cory
Higgins&quot;: 4,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Kevan
Oyama&quot;: 5,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Bob
Owlett&quot;: 5,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Jacob
Emert&quot;: 6,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Brandon
Itaoka&quot;: 6,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Ryan
Hohn&quot;: 7,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Zach
Deines&quot;: 8,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Rob
Small&quot;: 9,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Nick
Zangardi&quot;: 10,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Vikas
Bhasin&quot;: 11,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Daniel
Passino&quot;: 11,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Hisham
Sayeedi&quot;: 11,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Cory
Micheel&quot;: 11,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;AD
Hoffman&quot;: 11,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Bryan
Wolfe&quot;: 12,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Johnathn
Resetar&quot;: 12,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Kevin
Newell&quot;: 13,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Paul
Parker&quot;: 13,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Will
Quarles&quot;: 15,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Charlie
Hildebrand&quot;: 15,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Matt
Akers&quot;: 15<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; // Meal data provided by the
user<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const mealsData = {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Kevin
Newell&quot;: { &quot;Breakfast Buffet&quot;: 1, &quot;Lunch Box&quot;: 1 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Ryan
Hohn&quot;: { &quot;Breakfast Buffet&quot;: 1, &quot;Lunch Box&quot;: 1 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Johnathn
Resetar&quot;: { &quot;Breakfast Buffet&quot;: 1, &quot;Lunch Box&quot;: 1 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Charlie
Hildebrand&quot;: { &quot;Breakfast Buffet&quot;: 1, &quot;Lunch Box&quot;: 1 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Rob
Small&quot;: { &quot;Breakfast Buffet&quot;: 1, &quot;Lunch Box&quot;: 1 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Mike
Newell&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 1 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Cory
Higgins&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 1 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Zach
Deines&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 1 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Vikas
Bhasin&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 1 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Jacob
Emert&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 1 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Brandon
Itaoka&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 1 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Nick
Zangardi&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 1 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Andrew
Akers&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 1 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Hisham
Sayeedi&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 0 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Daniel
Passino&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 0 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Matt
Akers&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 0 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Bryan
Wolfe&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 0 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Bob
Owlett&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 0 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Kevan
Oyama&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 0 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Cory
Micheel&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 0 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;AD
Hoffman&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 0 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Paul
Parker&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 0 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;James
Adolfson&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 0 },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Will
Quarles&quot;: { &quot;Breakfast Buffet&quot;: 0, &quot;Lunch Box&quot;: 0 }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; // Global variable to store
parsed caddy selections<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const
caddySelectionsByPlayerRound = {};<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; function parseCSV(csv) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const lines = csv.split('\n').filter(line
=&gt; line.trim() !== '');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (lines.length &lt;
2) return [];<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const data = [];<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Define fixed
indices for relevant columns based on the CSV structure<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const dateIndex = 0;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const timeIndex = 1;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const courseIndex =
2;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
playerIndices = [3, 4, 5, 6]; // Indices for Player columns (C, D, E, F)<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
completeEstimateIndex = 11; // Index for 'Complete Estimate' column (L)<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (let i = 1; i &lt;
lines.length; i++) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
currentLine = lines[i].split(',');<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
Ensure the line has enough columns to avoid index out of bounds<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (currentLine.length
&lt;= Math.max(...playerIndices, completeEstimateIndex)) continue;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
row = {};<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; row['Date']
= currentLine[dateIndex] ? currentLine[dateIndex].trim() : '';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; row['Time']
= currentLine[timeIndex] ? currentLine[timeIndex].trim() : '';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; row['Course']
= currentLine[courseIndex] ? currentLine[courseIndex].trim() : '';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
The Caddie? column in the main CSV is not used for specific caddy type, it's
just 'YES' or empty<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
row['Caddie'] = currentLine[caddieIndex] ? currentLine[caddieIndex].trim() :
'';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; row['CompleteEstimate']
= currentLine[completeEstimateIndex] ? currentLine[completeEstimateIndex].trim()
: '';<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
Assign players to unique keys based on their fixed indices<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; row['Player1']
= currentLine[playerIndices[0]] ? currentLine[playerIndices[0]].trim() : '';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; row['Player2']
= currentLine[playerIndices[1]] ? currentLine[playerIndices[1]].trim() : '';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; row['Player3']
= currentLine[playerIndices[2]] ? currentLine[playerIndices[2]].trim() : '';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; row['Player4']
= currentLine[playerIndices[3]] ? currentLine[playerIndices[3]].trim() : '';<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
Only add row if it has essential data and at least one player<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (row['Date']
&amp;&amp; row['Time'] &amp;&amp; row['Course'] &amp;&amp;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; (row['Player1'] || row['Player2'] || row['Player3'] || row['Player4']))
{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; data.push(row);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return data;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; function parseCaddyWorkbookCSV(csv)
{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const lines = csv.split('\n').filter(line
=&gt; line.trim() !== '');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (lines.length &lt;
2) return;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const headers =
lines[0].split(',').map(h =&gt; h.trim());<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const playerColumnIndex
= 0; // The first column contains the player name (e.g., &quot;Zach
Deines&quot;)<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
caddyColumnIndices = [];<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
caddyColumnMap = {}; // Maps header index to { date: 'YYYY-MM-DD', roundType:
'AM' | 'PM' }<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Parse caddy
headers to create a map for lookup<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; headers.forEach((header,
index) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (header.includes(&quot;Caddy
/ Fore caddy selection&quot;)) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; const match = header.match(/\[.*? (\d{1,2}\/\d{1,2})(?: - (AM|PM)
Round)?(?: \((AM|PM) round only\))?\]/);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; if (match) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; const monthDay = match[1]; // e.g.,
&quot;8/20&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; let roundType = '';<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; // Determine round type based on specific phrases
or explicit &quot;AM/PM Round&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; if (header.includes(&quot;(PM round only)&quot;)) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; roundType = 'PM';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; } else if (header.includes(&quot;(AM round
only)&quot;)) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; roundType = 'AM';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; } else if (match[2]) { // If &quot;AM Round&quot;
or &quot;PM Round&quot; is explicitly stated<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; roundType = match[2];<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; // Construct YYYY-MM-DD date string (assuming 2025
as per original data)<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; const [month, day] = monthDay.split('/');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; const fullDate = `2025-${month.padStart(2, '0')}-${day.padStart(2,
'0')}`;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; if (roundType) { // Only add if roundType is
determined<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; caddyColumnIndices.push(index);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; caddyColumnMap[index] = { date:
fullDate, roundType: roundType };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Populate
caddySelectionsByPlayerRound<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (let i = 1; i &lt;
lines.length; i++) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
currentLine = lines[i].split(',');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
playerName = currentLine[playerColumnIndex] ? currentLine[playerColumnIndex].trim()
: '';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!playerName)
continue;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
caddySelectionsByPlayerRound[playerName] = {};<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
caddyColumnIndices.forEach(colIndex =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; const caddyType = currentLine[colIndex] ? currentLine[colIndex].trim()
: 'No Caddy';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; const { date, roundType } = caddyColumnMap[colIndex];<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; if (!caddySelectionsByPlayerRound[playerName][date]) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; caddySelectionsByPlayerRound[playerName][date] = {};<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; caddySelectionsByPlayerRound[playerName][date][roundType] =
caddyType;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; function populatePlayerSelect(players)
{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const playerSelect
= document.getElementById('player-select');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Check if
playerSelect exists before trying to manipulate it<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (playerSelect) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
playerSelect.innerHTML = ''; // Clear existing options<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
Sort players alphabetically<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
sortedPlayers = [...players].sort();<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
sortedPlayers.forEach(player =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; const option = document.createElement('option');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; option.value = player;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; option.textContent = player;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; playerSelect.appendChild(option);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; function populateNotes(playerName)
{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const notesBody =
document.getElementById('notes-table-body');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; notesBody.innerHTML
= ''; // Clear existing notes<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Static notes<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const staticNotes =
[<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Welcome
dinner at Trail's End 8:30 p.m.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;$50
/ daily group bet pays out to winning Stableford team and $10 of daily bet is
used for KP and Long-drives (in the fairway). Stableford teams are drawn daily
for the AM round only.&quot;, // Updated note text<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Last
group please pick-up KP and Long-drive markers.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Teams
will be redrawn daily based on prior day point totals and captains
adjusted.&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ];<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; staticNotes.forEach(note
=&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
tr = document.createElement('tr');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
td = document.createElement('td');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; td.className
= 'border px-4 py-2';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; td.textContent
= note;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tr.appendChild(td);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
notesBody.appendChild(tr);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Dynamic meal
notes<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const playerMeals =
mealsData[playerName];<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (playerMeals) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
breakfastStatus = playerMeals[&quot;Breakfast Buffet&quot;] === 1 ? &quot;Yes&quot;
: &quot;No&quot;;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
lunchStatus = playerMeals[&quot;Lunch Box&quot;] === 1 ? &quot;Yes&quot; : &quot;No&quot;;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let
trBreakfast = document.createElement('tr');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let
tdBreakfast = document.createElement('td');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
tdBreakfast.className = 'border px-4 py-2';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
tdBreakfast.textContent = `Breakfast: ${breakfastStatus}`;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
trBreakfast.appendChild(tdBreakfast);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
notesBody.appendChild(trBreakfast);<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let
trLunch = document.createElement('tr');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let tdLunch
= document.createElement('td');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
tdLunch.className = 'border px-4 py-2';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
tdLunch.textContent = `Lunch: ${lunchStatus}`;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
trLunch.appendChild(tdLunch);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
notesBody.appendChild(trLunch);<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
If meal data not found for the player<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let
trBreakfast = document.createElement('tr');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let
tdBreakfast = document.createElement('td');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
tdBreakfast.className = 'border px-4 py-2';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
tdBreakfast.textContent = `Breakfast: N/A`;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
trBreakfast.appendChild(tdBreakfast);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
notesBody.appendChild(trBreakfast);<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let
trLunch = document.createElement('tr');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let
tdLunch = document.createElement('td');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
tdLunch.className = 'border px-4 py-2';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
tdLunch.textContent = `Lunch: N/A`;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
trLunch.appendChild(tdLunch);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
notesBody.appendChild(trLunch);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; function
populateTeeTimesForPlayer(playerName) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const pairingsBody
= document.getElementById('tee-time-pairings-body');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
currentPlayerTitle = document.getElementById('current-player-tee-times-title');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
mainTripSummaryTitle = document.getElementById('main-trip-summary-title'); //
Get main title element<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
stablefordTableBody = document.querySelector('#stableford-table tbody'); // Get
stableford table body<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const parsedData =
parseCSV(csvData);<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Update the main
title dynamically<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Extract the
&quot;Bandon Dunes Golf Trip Summary&quot; part to keep it consistent<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const baseTitle = &quot;Bandon
Dunes Golf Trip Summary&quot;;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
mainTripSummaryTitle.textContent = `${playerName} - ${baseTitle}`; // Player
name in default color<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Update the
section title<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; currentPlayerTitle.textContent
= `${playerName}'s Tee Time Pairings`;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Clear existing
rows<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pairingsBody.innerHTML
= '';<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Clear existing
handicap row in Stableford table<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
existingHandicapRow = stablefordTableBody.querySelector('.player-handicap-row');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (existingHandicapRow)
{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
existingHandicapRow.remove();<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Add selected
player's handicap to Stableford table<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
playerHandicap = handicaps[playerName];<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (playerHandicap
!== undefined) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
tr = document.createElement('tr');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tr.className
= 'player-handicap-row'; // Add a class to easily find and remove later<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
tdLabel = document.createElement('td');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
tdLabel.className = 'border px-4 py-2 font-semibold';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
tdLabel.textContent = `${playerName}'s Handicap`;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tr.appendChild(tdLabel);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
tdValue = document.createElement('td');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
tdValue.className = 'border px-4 py-2';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
tdValue.textContent = playerHandicap;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tr.appendChild(tdValue);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
Add empty cells to maintain table structure for 4 columns<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tr.appendChild(document.createElement('td'));<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tr.appendChild(document.createElement('td'));<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
stablefordTableBody.appendChild(tr);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Filter data for
the specific player<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let playerTeeTimes
= parsedData.filter(row =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
Check all possible player columns for the playerName<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return
(row['Player1'] === playerName ||<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; row['Player2'] === playerName ||<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; row['Player3'] === playerName ||<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; row['Player4'] === playerName);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Sort tee times
by date and then by time for accurate &quot;last round&quot; identification<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; playerTeeTimes.sort((a,
b) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
dateA = new Date(a['Date'] + ' ' + a['Time'].replace('a.m.', 'AM').replace('p.m.',
'PM'));<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
dateB = new Date(b['Date'] + ' ' + b['Time'].replace('a.m.', 'AM').replace('p.m.',
'PM'));<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return
dateA - dateB;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Iterate through
the filtered and sorted data and create table rows<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; playerTeeTimes.forEach(row
=&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
tr = document.createElement('tr');<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
dateTd = document.createElement('td');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dateTd.className
= 'px-4 py-2';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
Format the date: &quot;Wed - 8/20&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
dateParts = row['Date'].split('-'); // Split YYYY-MM-DD<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
year = parseInt(dateParts[0]);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
month = parseInt(dateParts[1]) - 1; // Month is 0-indexed<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
day = parseInt(dateParts[2]);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
dateObj = new Date(year, month, day);<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
options = { weekday: 'short', month: 'numeric', day: 'numeric' };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dateTd.textContent
= dateObj.toLocaleDateString('en-US', options).replace(',', ' -'); //
&quot;Wed, 8/20&quot; to &quot;Wed - 8/20&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tr.appendChild(dateTd);<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
timeTd = document.createElement('td');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
timeTd.className = 'px-4 py-2';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
timeTd.textContent = row['Time'];<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tr.appendChild(timeTd);<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
Add Estimated Completion Time<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
completeTimeTd = document.createElement('td');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
completeTimeTd.className = 'px-4 py-2';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
fullDateTime = row['CompleteEstimate'];<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (fullDateTime)
{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; // Assuming fullDateTime is like &quot;YYYY-MM-DD HH:MM:SS&quot;
or &quot;HH:MM&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; let timeString = fullDateTime.includes(' ') ? fullDateTime.split('
')[1] : fullDateTime;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; let [hours, minutes] = timeString.split(':').map(Number);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; let ampm = hours &gt;= 12 ? 'p.m.' : 'a.m.';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; hours = hours % 12;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; hours = hours ? hours : 12; // The hour '0' should be '12'<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; const formattedMinutes = minutes &lt; 10 ? '0' + minutes :
minutes;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; completeTimeTd.textContent = `${hours}:${formattedMinutes} ${ampm}`;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else
{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; completeTimeTd.textContent = 'N/A';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tr.appendChild(completeTimeTd);<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
courseTd = document.createElement('td');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
courseTd.className = 'px-4 py-2';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
courseTd.textContent = row['Course'];<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tr.appendChild(courseTd);<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
Determine round type (AM/PM) from the tee time<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let
teeTimeHours = parseInt(row['Time'].split(':')[0]);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let
teeTimeAmPm = row['Time'].toLowerCase().includes('p.m.') ? 'PM' : 'AM';<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
Handle 12 AM/PM<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (row['Time'].toLowerCase().startsWith('12')
&amp;&amp; row['Time'].toLowerCase().includes('a.m.')) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; teeTimeAmPm = 'AM'; // 12 AM<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else
if (row['Time'].toLowerCase().startsWith('12') &amp;&amp; row['Time'].toLowerCase().includes('p.m.'))
{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; teeTimeAmPm = 'PM'; // 12 PM<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
Get caddie selection for this specific round from the new caddy data<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
caddieTypeForRound = caddySelectionsByPlayerRound[playerName] &amp;&amp;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp;caddySelectionsByPlayerRound[playerName][row['Date']] &amp;&amp;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp;caddySelectionsByPlayerRound[playerName][row['Date']][teeTimeAmPm]<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp;? caddySelectionsByPlayerRound[playerName][row['Date']][teeTimeAmPm]<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp;: 'N/A'; // Default if not found or no selection<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
caddieTd = document.createElement('td');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
caddieTd.className = 'px-4 py-2';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
caddieTd.textContent = caddieTypeForRound;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tr.appendChild(caddieTd);<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
players = [];<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
Collect all players from the row, excluding the current playerName<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (let
i = 1; i &lt;= 4; i++) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; const playerCol = `Player${i}`;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; const partnerName = row[playerCol];<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; if (partnerName &amp;&amp; partnerName !== playerName) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; const handicap = handicaps[partnerName];<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; if (handicap !== undefined) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; players.push(`${partnerName} (${handicap})`);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; } else {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; players.push(partnerName); // Add
without handicap if not found<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
partnersTd = document.createElement('td');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
partnersTd.className = 'px-4 py-2';<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
partnersTd.textContent = players.join(', ');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tr.appendChild(partnersTd);<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
pairingsBody.appendChild(tr);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; // Initialize on page load<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; window.onload = () =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; parseCaddyWorkbookCSV(caddyWorkbookCsvData);
// Parse caddy data first<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const allPlayers =
Object.keys(handicaps);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
populatePlayerSelect(allPlayers);<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const playerSelect
= document.getElementById('player-select');<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (playerSelect) {
// Check if playerSelect exists again after populatePlayerSelect<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
playerSelect.addEventListener('change', (event) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; const selectedPlayer = event.target.value;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; populateTeeTimesForPlayer(selectedPlayer);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; populateNotes(selectedPlayer); // Populate notes for the selected
player<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //
Set initial player (e.g., Cory Higgins)<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
initialPlayer = &quot;Cory Higgins&quot;;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (allPlayers.includes(initialPlayer))
{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; playerSelect.value = initialPlayer;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; populateTeeTimesForPlayer(initialPlayer);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; populateNotes(initialPlayer); // Populate notes for the initial
player<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else
if (allPlayers.length &gt; 0) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; // If Cory Higgins not found, select the first player in the list<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; playerSelect.value = allPlayers[0];<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; populateTeeTimesForPlayer(allPlayers[0]);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; populateNotes(allPlayers[0]); // Populate notes for the first
player<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;/script&gt;<o:p></o:p></p>

<p class=MsoNormal>&lt;/body&gt;<o:p></o:p></p>

<p class=MsoNormal>&lt;/html&gt;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
